name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies and certifi
        run: |
          pip install pyinstaller websocket-client certifi
      - name: Locate certifi CA certificate bundle
        id: certifi_location
        run: |
          echo "CERTIFI_PATH=$(python -c 'import certifi; print(certifi.where())')" >> $GITHUB_ENV
      - name: Build macOS Binary including CA certificate
        run: |
          pyinstaller --onefile --windowed --add-data "$CERTIFI_PATH:." ${{ github.workspace }}/rolink-activity.py --icon=${{ github.workspace }}/icon.icns --name "RoLink Activity"
        env:
          CERTIFI_PATH: ${{ env.CERTIFI_PATH }}
      - name: Compress macOS Binary
        run: |
          zip -r RoLink-Activity-macOS.zip "RoLink Activity.app"
        working-directory: dist
      - name: Upload macOS Binary
        uses: actions/upload-artifact@v2
        with:
          name: RoLink-Activity-macOS-app
          path: dist/RoLink-Activity-macOS.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies and certifi
        run: |
          pip install pyinstaller websocket-client certifi
      - name: Locate certifi CA certificate bundle for Linux
        id: certifi_location_linux
        run: |
          echo "CERTIFI_PATH=$(python -c 'import certifi; print(certifi.where())')" >> $GITHUB_ENV
      - name: Build Linux Binary including CA certificate
        run: |
          pyinstaller --onefile --windowed --add-data "$CERTIFI_PATH:." ${{ github.workspace }}/rolink-activity.py --icon=${{ github.workspace }}/icon.png --name "RoLink Activity"
        env:
          CERTIFI_PATH: ${{ env.CERTIFI_PATH }}
      - name: Upload Linux Binary
        uses: actions/upload-artifact@v2
        with:
          name: RoLink-Activity-Linux
          path: dist/RoLink Activity

    build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies and certifi
        run: |
          pip install pyinstaller websocket-client certifi
      - name: Locate certifi CA certificate bundle for Windows
        run: |
          $certifiPath = python -c "import certifi; print(certifi.where())"
          echo "CERTIFI_PATH=$certifiPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: powershell
      - name: Build Windows Binary including CA certificate
        run: |
          pyinstaller --onefile --windowed --add-data "$CERTIFI_PATH;." ${{ github.workspace }}/rolink-activity.py --icon=${{ github.workspace }}/icon.ico --name "RoLink Activity"
        env:
          CERTIFI_PATH: ${{ env.CERTIFI_PATH }}
      - name: Upload Windows Binary
        uses: actions/upload-artifact@v2
        with:
          name: RoLink-Activity-Windows
          path: dist/RoLink Activity.exe

  create-release:
    needs: [build-macos, build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RoLink-Activity-macOS-app/RoLink-Activity-macOS.zip
          asset_name: RoLink-Activity-macOS.zip
          asset_content_type: application/zip
      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RoLink-Activity-Linux/RoLink Activity
          asset_name: RoLink-Activity-Linux
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RoLink-Activity-Windows/RoLink Activity.exe
          asset_name: RoLink-Activity-Windows.exe
          asset_content_type: application/octet-stream
